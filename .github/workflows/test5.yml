name: Build3

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/test5.yml'
      - 'files/**'
      - 'Makefile'
      - 'base_r2s.seed'

jobs:

  build:

    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d
          sudo apt-get update
          sudo apt-get -y --no-install-recommends install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          curl https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh  | sed '/#/d' | sed 's/\\//g' | sed 's/exit 0//g' | sed 's/sudo apt -y install//g' | sed 's/sudo apt-get -y install//g' | sed 's/:i386//g' | xargs sudo apt-get -y --no-install-recommends install
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk /usr/local/share/boost /opt/ghc

      - name: Install Repo
        run: |
          git clone https://github.com/friendlyarm/repo
          sudo cp repo/repo /usr/bin/

      - name: po2lmo
        run: |
          git clone -b master --single-branch https://github.com/kongfl888/po2lmo.git
          mv po2lmo friendlywrt-rk3328/friendlywrt/package

      - name: Build
        run: |
          cd friendlywrt-rk3328/friendlywrt/package/po2lmo
          make po2lmo

      - name: Assemble Artifact
        id: assemble_artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          cp -rf friendlywrt-rk3328/friendlywrt/package/po2lmo/src/* ./artifact/
          zip -r artifact.zip ./artifact/
          release_tag="po2lmo-$(date +%Y-%m-%d-%H)"
          echo "##[set-output name=release_tag;]$release_tag"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.sec_token1 }}
        with:
          tag_name: ${{ steps.assemble_artifact.outputs.release_tag }}
          release_name: ${{ steps.assemble_artifact.outputs.release_tag }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.sec_token1 }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./artifact.zip
          asset_name: ${{ steps.assemble_artifact.outputs.release_tag }}.zip
          asset_content_type: application/zip
